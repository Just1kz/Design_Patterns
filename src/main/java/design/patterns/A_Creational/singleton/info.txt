Шаблон: Одиночка (Singleton)
=======================================================================================================
Цель:

Гарантировать, что у класса будет только один единственный экземпляр и к нему будет предоставлена глобальная точка доступа

=======================================================================================================
Для чего используется:

Для создания единственного экземпляра определенного класса

=======================================================================================================
Пример использования:

- необходим единственный экземпляр класса, который доступен для всех клиентов
- единственный экземпляр должен наследоваться путем порождения подклассов, при этом, клиенты имеют возможность работать с
классом-наследником без модификации своего кода.

=======================================================================================================
Шаги реализации:
- Добавьте в класс приватное статическое поле, которое будет содержать одиночный объект.

- Объявите статический создающий метод, который будет использоваться для получения одиночки.

- Добавьте «ленивую инициализацию» (создание объекта при первом вызове метода) в создающий метод одиночки.

- Сделайте конструктор класса приватным.

- В клиентском коде замените вызовы конструктора одиночка вызовами его создающего метода.

=======================================================================================================
Преимущества и недостатки:
 + Гарантирует наличие единственного экземпляра класса.
 + Предоставляет к нему глобальную точку доступа.
 + Реализует отложенную инициализацию объекта-одиночки.

 - Нарушает принцип единственной ответственности класса.
 - Маскирует плохой дизайн.
 - Проблемы мультипоточности.
 - Требует постоянного создания Mock-объектов при юнит-тестировании.

 =======================================================================================================