Шаблон: Абстрактная фабрика (Abstract Factory)
=======================================================================================================
Цель:

Создание интерфейса, для создания множества взаимосвязанных или взаимозависимых объектов, без жёсткой
привязке к конкретным классам.

=======================================================================================================
Для чего используется:

Для создания множеств взаимосвязанных объектов.

=======================================================================================================
Пример использования:

- система не должна зависеть от метода создания, компоновки и представления входящих в неё объектов;
- входящие взаимосвязанные объекты должны использоваться вместе;
- система должна конфигурироваться одним из множеств объектов, из которых она состоит;
- нам необходимо предоставить множество объектов, раскрывая только их интерфейсы но не реализацию.

=======================================================================================================
Шаги реализации:
- Создайте таблицу соотношений типов продуктов к вариациям семейств продуктов.

- Сведите все вариации продуктов к общим интерфейсам.

- Определите интерфейс абстрактной фабрики. Он должен иметь фабричные методы для создания каждого из типов продуктов.

- Создайте классы конкретных фабрик, реализовав интерфейс абстрактной фабрики. Этих классов должно быть столько же, сколько и вариаций семейств продуктов.

- Измените код инициализации программы так, чтобы она создавала определённую фабрику и передавала её в клиентский код.

- Замените в клиентском коде участки создания продуктов через конструктор вызовами соответствующих методов фабрики.

=======================================================================================================
Преимущества и недостатки:

 + Гарантирует сочетаемость создаваемых продуктов.
 + Избавляет клиентский код от привязки к конкретным классам продуктов.
 + Выделяет код производства продуктов в одно место, упрощая поддержку кода.
 + Упрощает добавление новых продуктов в программу.
 + Реализует принцип открытости/закрытости.

 - Усложняет код программы из-за введения множества дополнительных классов.
 - Требует наличия всех типов продуктов в каждой вариации.

 =======================================================================================================